// Script para probar la funcionalidad de email localmente
const nodemailer = require('nodemailer')
require('dotenv').config({ path: '.env.local' })

async function testEmailConnection() {
    console.log('üîç Probando configuraci√≥n de email...\n')
    
    // Verificar variables de entorno
    if (!process.env.EMAIL_USER || !process.env.EMAIL_PASS) {
        console.error('‚ùå Error: Variables EMAIL_USER o EMAIL_PASS no encontradas en .env.local')
        process.exit(1)
    }
    
    console.log('‚úÖ Variables de entorno encontradas:')
    console.log(`   EMAIL_USER: ${process.env.EMAIL_USER}`)
    console.log(`   EMAIL_PASS: ${'*'.repeat(process.env.EMAIL_PASS.length)}\n`)
    
    try {
        // Crear transportador
        const transporter = nodemailer.createTransport({
            service: 'gmail',
            auth: {
                user: process.env.EMAIL_USER,
                pass: process.env.EMAIL_PASS,
            },
            secure: true,
            port: 465,
        })
        
        console.log('üîå Verificando conexi√≥n con Gmail...')
        await transporter.verify()
        console.log('‚úÖ Conexi√≥n con Gmail exitosa!\n')
        
        // Enviar emails de prueba (simulando el comportamiento real)
        console.log('üìß Enviando emails de prueba (notificaci√≥n + confirmaci√≥n)...')
        
        const testNotificationEmail = {
            from: `"Portfolio Test" <${process.env.EMAIL_USER}>`,
            to: 'julievill77@gmail.com',
            subject: 'üß™ Test - Notificaci√≥n de mensaje',
            html: `
                <h2>‚úÖ Test de Notificaci√≥n Exitoso!</h2>
                <p>Este es el email que recibir√°s cuando alguien te contacte.</p>
                <p><strong>Fecha:</strong> ${new Date().toLocaleString('es-ES')}</p>
                <p><strong>Tipo:</strong> Email de notificaci√≥n</p>
                <hr>
                <p><small>Email de prueba para verificar la funcionalidad.</small></p>
            `
        }

        const testConfirmationEmail = {
            from: `"Julie Villegas Portfolio" <${process.env.EMAIL_USER}>`,
            to: process.env.EMAIL_USER, // Te lo env√≠o a ti para que puedas ver c√≥mo se ve
            subject: 'üß™ Test - Confirmaci√≥n para remitente',
            html: `
                <h2>‚úÖ Test de Confirmaci√≥n Exitoso!</h2>
                <p>Este es el email que recibir√°n las personas que te contacten.</p>
                <p><strong>Fecha:</strong> ${new Date().toLocaleString('es-ES')}</p>
                <p><strong>Tipo:</strong> Email de confirmaci√≥n</p>
                <hr>
                <p><small>Email de prueba para verificar la funcionalidad.</small></p>
            `
        }
        
        const [notificationInfo, confirmationInfo] = await Promise.all([
            transporter.sendMail(testNotificationEmail),
            transporter.sendMail(testConfirmationEmail)
        ])
        
        console.log('‚úÖ Emails de prueba enviados exitosamente!')
        console.log(`   Notificaci√≥n ID: ${notificationInfo.messageId}`)
        console.log(`   Confirmaci√≥n ID: ${confirmationInfo.messageId}`)
        console.log(`   Destinatario: julievill77@gmail.com\n`)
        
        console.log('üéâ ¬°Todo configurado correctamente!')
        console.log('   Tu formulario de contacto deber√≠a funcionar tanto local como en Vercel.')
        
    } catch (error) {
        console.error('‚ùå Error en la prueba:', error.message)
        console.error('\nüîß Posibles soluciones:')
        console.error('   1. Verifica que tu App Password sea correcto')
        console.error('   2. Aseg√∫rate de que la verificaci√≥n en dos pasos est√© activada en Gmail')
        console.error('   3. Genera un nuevo App Password si es necesario')
        console.error('   4. Verifica que no haya espacios extra en las variables de entorno')
        process.exit(1)
    }
}

// Ejecutar la prueba
testEmailConnection()